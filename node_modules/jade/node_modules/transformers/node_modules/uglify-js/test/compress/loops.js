{
    options = {loops: true};
    input: {
        while (foo()) bar();
    }
    expect: {
        for (; foo();) bar();
    }
}

{
    options = {loops: true};
    input: {
        for (; ;)
            if (foo()) break;
    }
    expect: {
        for (; !foo(););
    }
}

{
    options = {loops: true};
    input: {
        for (; bar();)
            if (foo()) break;
    }
    expect: {
        for (; bar() && !foo(););
    }
}

{
    options = {loops: true};
    input: {
        for (; bar();) {
            if (foo()) break;
            stuff1();
            stuff2();
        }
    }
    expect: {
        for (; bar() && !foo();) {
            stuff1();
            stuff2();
        }
    }
}

{
    options = {loops: true, sequences: true};
    input: {
        for (; bar();) {
            x();
            y();
            if (foo()) break;
            z();
            k();
        }
    }
    expect: {
        for (; bar() && (x(), y(), !foo());) z(), k();
    }
}

{
    options = {loops: true};
    input: {
        for (; ;) if (foo()) bar(); else break;
    }
    expect: {
        for (; foo();) bar();
    }
}

{
    options = {loops: true};
    input: {
        for (; bar();) {
            if (foo()) baz();
            else break;
        }
    }
    expect: {
        for (; bar() && foo();) baz();
    }
}

{
    options = {loops: true};
    input: {
        for (; bar();) {
            if (foo()) baz();
            else break;
            stuff1();
            stuff2();
        }
    }
    expect: {
        for (; bar() && foo();) {
            baz();
            stuff1();
            stuff2();
        }
    }
}

{
    options = {loops: true, sequences: true};
    input: {
        for (; bar();) {
            x();
            y();
            if (foo()) baz();
            else break;
            z();
            k();
        }
    }
    expect: {
        for (; bar() && (x(), y(), foo());) baz(), z(), k();
    }
}
